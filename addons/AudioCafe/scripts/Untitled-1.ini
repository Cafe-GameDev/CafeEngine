WebFetch:

https://godotengine.org/article/godot-4-0-sets-sail/

https://godotengine.org/article/godot-4-1-is-here/

https://godotengine.org/article/godot-4-2-arrives-in-style/

https://godotengine.org/releases/4.3/

https://godotengine.org/releases/4.4/

https://godotengine.org/article/release-candidate-godot-4-5-rc-1/

https://godotengine.org/article/release-candidate-godot-4-5-rc-2/

https://www.youtube.com/watch?v=fMe7ZZt0Ca8

https://docs.godotengine.org/en/4.4/classes/index.html

https://docs.godotengine.org/en/4.4/tutorials/audio/audio_streams.html

https://docs.godotengine.org/en/4.4/classes/class_audiostream.html

https://docs.godotengine.org/en/4.4/classes/class_audiostreamplaylist.html

https://docs.godotengine.org/en/4.4/classes/class_audiostreamsynchronized.html

https://docs.godotengine.org/en/4.4/classes/class_audiostreaminteractive.html

GoogleSearch Godot 4.3:
AudioStreamPlaybackInteractive
AudioStreamPlaybackPlaylist
AudioStreamPlaybackSynchronized

Salve um documento com o nome audio_resources.md

Eu quero atualizar o @scripts/generate_audio_manifest.gd
vamos escrever um projeto de lei sobre a mudança
v1.1: mudanças:
audio manifest passará a armazenar os resources de playlist, invés de armazenar as uis
o generate deve gerar a finalkey e pegar os uids, e após isso, invés de simplesmente salvar nos dictionays as keys = array[uid, uid, uid...] ele vai ser key = playlist.tres

ou seja, não vai mais armazenar os dados brutos (uids), mas sim os uids vão ser convertidos em audiostream, e em seguida vai juntar todos em um AudioStreamPlaylist e salvar usando o DirAccess em arquivos separados

ou seja, cada playlist vai ter seu proprio arquivo final_key.tres ex: ui_click.tres
e o manifest vai conter no seu dictionary a finalkey = resource loud final_key.tres
faça todas as buscas no google e web fetch e em seguida vamos escrever as novas leis